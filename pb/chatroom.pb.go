// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatroom.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Client struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{0}
}

func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Message struct {
	From                 *Client  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Client  `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetFrom() *Client {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Message) GetTo() *Client {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Event struct {
	// Types that are valid to be assigned to Command:
	//	*Event_Login
	//	*Event_Message
	Command              isEvent_Command `protobuf_oneof:"command"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{2}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Command interface {
	isEvent_Command()
}

type Event_Login struct {
	Login *Client `protobuf:"bytes,1,opt,name=login,proto3,oneof"`
}

type Event_Message struct {
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

func (*Event_Login) isEvent_Command() {}

func (*Event_Message) isEvent_Command() {}

func (m *Event) GetCommand() isEvent_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Event) GetLogin() *Client {
	if x, ok := m.GetCommand().(*Event_Login); ok {
		return x.Login
	}
	return nil
}

func (m *Event) GetMessage() *Message {
	if x, ok := m.GetCommand().(*Event_Message); ok {
		return x.Message
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Event) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Event_OneofMarshaler, _Event_OneofUnmarshaler, _Event_OneofSizer, []interface{}{
		(*Event_Login)(nil),
		(*Event_Message)(nil),
	}
}

func _Event_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Event)
	// command
	switch x := m.Command.(type) {
	case *Event_Login:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Login); err != nil {
			return err
		}
	case *Event_Message:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Message); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Event.Command has unexpected type %T", x)
	}
	return nil
}

func _Event_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Event)
	switch tag {
	case 1: // command.login
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Client)
		err := b.DecodeMessage(msg)
		m.Command = &Event_Login{msg}
		return true, err
	case 2: // command.message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Message)
		err := b.DecodeMessage(msg)
		m.Command = &Event_Message{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Event_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Event)
	// command
	switch x := m.Command.(type) {
	case *Event_Login:
		s := proto.Size(x.Login)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Event_Message:
		s := proto.Size(x.Message)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Client)(nil), "jerrayfu.chatroom.Client")
	proto.RegisterType((*Message)(nil), "jerrayfu.chatroom.Message")
	proto.RegisterType((*Event)(nil), "jerrayfu.chatroom.Event")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatroomClient is the client API for Chatroom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatroomClient interface {
	CheckIn(ctx context.Context, opts ...grpc.CallOption) (Chatroom_CheckInClient, error)
}

type chatroomClient struct {
	cc *grpc.ClientConn
}

func NewChatroomClient(cc *grpc.ClientConn) ChatroomClient {
	return &chatroomClient{cc}
}

func (c *chatroomClient) CheckIn(ctx context.Context, opts ...grpc.CallOption) (Chatroom_CheckInClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chatroom_serviceDesc.Streams[0], "/jerrayfu.chatroom.Chatroom/CheckIn", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatroomCheckInClient{stream}
	return x, nil
}

type Chatroom_CheckInClient interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ClientStream
}

type chatroomCheckInClient struct {
	grpc.ClientStream
}

func (x *chatroomCheckInClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatroomCheckInClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatroomServer is the server API for Chatroom service.
type ChatroomServer interface {
	CheckIn(Chatroom_CheckInServer) error
}

func RegisterChatroomServer(s *grpc.Server, srv ChatroomServer) {
	s.RegisterService(&_Chatroom_serviceDesc, srv)
}

func _Chatroom_CheckIn_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatroomServer).CheckIn(&chatroomCheckInServer{stream})
}

type Chatroom_CheckInServer interface {
	Send(*Event) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type chatroomCheckInServer struct {
	grpc.ServerStream
}

func (x *chatroomCheckInServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatroomCheckInServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Chatroom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jerrayfu.chatroom.Chatroom",
	HandlerType: (*ChatroomServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CheckIn",
			Handler:       _Chatroom_CheckIn_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "chatroom.proto",
}

func init() { proto.RegisterFile("chatroom.proto", fileDescriptor_9ca54b9e3ca377ae) }

var fileDescriptor_9ca54b9e3ca377ae = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4f, 0xea, 0x40,
	0x10, 0x87, 0x69, 0x1f, 0x50, 0x98, 0x97, 0x98, 0xb8, 0xa7, 0x5a, 0x3d, 0x18, 0x4e, 0x78, 0xa0,
	0x55, 0x4c, 0x48, 0x3c, 0x0a, 0x31, 0x81, 0x03, 0x97, 0x1e, 0xbd, 0x98, 0xa5, 0x5d, 0xca, 0x4a,
	0x77, 0x87, 0x6c, 0x07, 0x88, 0x07, 0xfe, 0x77, 0xc3, 0x2e, 0xf5, 0x22, 0xea, 0x6d, 0x3a, 0xf3,
	0xcd, 0xfc, 0xbe, 0x66, 0xe1, 0x22, 0x5b, 0x71, 0x32, 0x88, 0x2a, 0xde, 0x18, 0x24, 0x64, 0x97,
	0xef, 0xc2, 0x18, 0xfe, 0xb1, 0xdc, 0xc6, 0xf5, 0x20, 0x1a, 0x15, 0x92, 0x56, 0xdb, 0x45, 0x9c,
	0xa1, 0x4a, 0xd4, 0x5e, 0xd2, 0x1a, 0xf7, 0x49, 0x81, 0x03, 0xcb, 0x0f, 0x76, 0xbc, 0x94, 0x39,
	0x27, 0x34, 0x55, 0xf2, 0x55, 0xba, 0x53, 0xd1, 0x4d, 0x81, 0x58, 0x94, 0x22, 0xe1, 0x1b, 0x99,
	0x70, 0xad, 0x91, 0x38, 0x49, 0xd4, 0x95, 0x9b, 0xf6, 0x9e, 0xa0, 0x3d, 0x29, 0xa5, 0xd0, 0xc4,
	0xae, 0xa1, 0x9b, 0xd9, 0xea, 0x4d, 0xe6, 0xa1, 0x77, 0xeb, 0xf5, 0xbb, 0x69, 0xc7, 0x35, 0x66,
	0x39, 0x63, 0xd0, 0xd4, 0x5c, 0x89, 0xd0, 0xb7, 0x7d, 0x5b, 0xf7, 0x0e, 0x10, 0xcc, 0x45, 0x55,
	0xf1, 0x42, 0xb0, 0x01, 0x34, 0x97, 0x06, 0x95, 0x5d, 0xfb, 0x3f, 0xbc, 0x8a, 0xbf, 0xd9, 0xc7,
	0x2e, 0x24, 0xb5, 0x18, 0xbb, 0x03, 0x9f, 0xd0, 0xde, 0xfa, 0x15, 0xf6, 0x09, 0x59, 0x08, 0x41,
	0x86, 0x9a, 0x84, 0xa6, 0xf0, 0x9f, 0xcd, 0xae, 0x3f, 0x7b, 0x07, 0x68, 0xbd, 0xec, 0x8e, 0xe2,
	0x0f, 0xd0, 0x2a, 0xb1, 0x90, 0xfa, 0xcf, 0xf4, 0x69, 0x23, 0x75, 0x24, 0x1b, 0x41, 0xa0, 0x9c,
	0xfa, 0xc9, 0x22, 0x3a, 0xb3, 0x74, 0xfa, 0xb9, 0x69, 0x23, 0xad, 0xe1, 0x71, 0xf7, 0x68, 0xa3,
	0x14, 0xd7, 0xf9, 0x70, 0x0e, 0x9d, 0xc9, 0x89, 0x64, 0xcf, 0x10, 0x4c, 0x56, 0x22, 0x5b, 0xcf,
	0x34, 0x0b, 0xcf, 0x1c, 0xb2, 0x9a, 0xd1, 0x8f, 0x93, 0xbe, 0x77, 0xef, 0x8d, 0x9b, 0xaf, 0xfe,
	0x66, 0xb1, 0x68, 0xdb, 0x47, 0x79, 0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x23, 0x8a, 0x28,
	0x0f, 0x02, 0x00, 0x00,
}
